{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","Filter","newFilter","setNewFilter","value","onChange","event","target","PersonForm","newName","setNewName","newNumber","setNewNumber","handleSubmit","onSubmit","type","Person","person","handleDelete","name","number","onClick","Persons","persons","map","key","Notification","notification","className","message","App","useState","setPersons","setNotification","nameExists","includes","filteredPersons","trim","filter","toLowerCase","useEffect","personService","showMessage","setTimeout","preventDefault","window","confirm","personID","find","catch","error","concat","personDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aeb79661.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => \r\n  axios\r\n    .get(baseUrl)\r\n    .then(response => response.data)\r\n    \r\n  \r\nconst create = newPerson =>\r\n  axios\r\n    .post(baseUrl, newPerson)\r\n    .then(response => response.data)\r\n\r\nconst deletePerson = id =>\r\n  axios.delete(`${baseUrl}/${id}`)\r\n\r\nconst update = (id, newPerson) =>\r\n  axios\r\n    .put(`${baseUrl}/${id}`, newPerson)\r\n    .then(response => response.data)\r\n\r\nexport default { getAll, create, deletePerson, update }","import React from 'react'\r\n\r\nconst Filter = ({newFilter, setNewFilter}) => \r\n  <div>\r\n    filter shown with {' '}\r\n    <input \r\n      value={newFilter} \r\n      onChange={event => setNewFilter(event.target.value)}\r\n    />\r\n  </div>\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({newName, setNewName, newNumber, setNewNumber, handleSubmit}) =>\r\n  <form onSubmit={handleSubmit}>\r\n    <div>\r\n      name: {' '}\r\n      <input \r\n        value={newName} \r\n        onChange={event => setNewName(event.target.value)}\r\n      />\r\n    </div>\r\n    <div>\r\n      number: {' '}\r\n      <input \r\n        value={newNumber} \r\n        onChange={event => setNewNumber(event.target.value)}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({person, handleDelete}) => \r\n  <div>\r\n    {person.name} {person.number} {' '}\r\n    <button onClick={handleDelete(person)}>delete</button>\r\n  </div>\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, handleDelete}) => \r\n  <div>\r\n    {persons.map(person => \r\n      <Person key={person.name} person={person} handleDelete={handleDelete}/>\r\n    )}\r\n  </div>\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({notification}) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={`notification ${notification.type}`}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\nimport personService from './services/persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ newFilter, setNewFilter] = useState('')\r\n  const [ notification, setNotification] = useState(null)\r\n\r\n  const allNames = persons.map(person => person.name)\r\n  const nameExists = allNames.includes(newName) \r\n  const filteredPersons = \r\n    newFilter.trim() === \"\" ?\r\n    persons :\r\n    persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(response => setPersons(response))\r\n  }, [])\r\n\r\n  const showMessage = (message, type=\"success\") => {\r\n    setNotification({message, type})\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newPerson = { name: newName,  number: newNumber}\r\n\r\n    if (nameExists) {\r\n      const add = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\r\n      if (add === true) {\r\n        const personID = persons.find(person => person.name === newName).id\r\n        personService\r\n          .update(personID, newPerson)\r\n          .then(response => {\r\n            setPersons(persons.map(person => person.id === personID ? response : person))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            showMessage(`Updated ${newName}`)\r\n          })\r\n          .catch(error => {\r\n            showMessage(`Information of ${newName} has already been removed from server`, \"error\")\r\n            setPersons(persons.filter(person => person.id !== personID))\r\n          })\r\n      }\r\n    } else {\r\n      personService\r\n        .create(newPerson)\r\n        .then(response => {\r\n          setPersons(persons.concat(response))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          showMessage(`Added ${newName}`)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleDelete = (personDelete) =>\r\n    (event) => {\r\n      event.preventDefault()\r\n      const result = window.confirm(`Delete ${personDelete.name}?`);\r\n      if (result !== true) {\r\n        return\r\n      }\r\n      personService\r\n        .deletePerson(personDelete.id)\r\n        .then(() => {\r\n          setPersons(persons.filter(person => person.id !== personDelete.id))\r\n          showMessage(`Deleted ${personDelete.name}`)\r\n        })\r\n        .catch(error => {\r\n          showMessage(`Information of ${newName} has already been removed from server`, \"error\")\r\n          setPersons(persons.filter(person => person.id !== personDelete.id))\r\n        })\r\n    } \r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification}/>\r\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\r\n      <h2>Add a new</h2>\r\n      <PersonForm \r\n        newName={newName} setNewName={setNewName}\r\n        newNumber={newNumber} setNewNumber={setNewNumber}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={filteredPersons} handleDelete={handleDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}